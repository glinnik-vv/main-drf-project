services:
  db:
    # Использование готового образа postgres
    image: postgres
    # Задание переменных окружения для контейнера с postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      # Задание имени контейнера для сервиса pgdb
    container_name: db
    # Связывание тома с директорией в контейнере для сохранения данных postgres
    volumes:
      - pgdata:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    networks:
      - mynetwork

  django:
    # Сборка образа для сервиса django из текущей директории
    build: .
    # Задание имени контейнера для сервиса django
    container_name: django
    # Задание команды, которую нужно запустить при запуске контейнера для сервиса django
    command: sh -c "python mysite/manage.py migrate && python mysite/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/app
    # Открытие порта на хостовой машине и перенаправление на порт в контейнере
    ports:
      - 8000:8000
    networks:
      - mynetwork
    depends_on:
      - db
      
  nuxt:
    build:
      context: ../nuxt-vue-site
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - mynetwork
    depends_on:
      - django
    environment:
      - API_URL=http://django:8000

networks:
  mynetwork:
    driver: bridge

volumes:
  pgdata:
